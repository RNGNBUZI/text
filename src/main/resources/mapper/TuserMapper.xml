<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wsz.text.dao.TuserMapper">
  <resultMap id="BaseResultMap" type="com.wsz.text.entity.Tuser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="rname" jdbcType="VARCHAR" property="rname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="flag" jdbcType="SMALLINT" property="flag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, password, phone, createtime, flag
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select u.id, u.`name`, u.createtime, u.phone, r.`rname` from t_user u join t_user_role ur on u.id = ur.uid join t_role r on r.id = ur.rid
    where u.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wsz.text.entity.Tuser" useGeneratedKeys = "true" keyProperty = "rid">
    insert into t_user (id, name, password, 
      phone, createtime, flag
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{flag,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wsz.text.entity.Tuser">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wsz.text.entity.Tuser">
    update t_user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wsz.text.entity.Tuser">
    update t_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByName"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
    where name = #{name}
  </select>
  <select id="queryByPage" resultMap="BaseResultMap">
     select u.id, u.`name`, u.createtime, u.phone, r.`rname` from t_user u join t_user_role ur on u.id = ur.uid join t_role r on r.id = ur.rid
    order  by u.id asc limit #{index},#{count}
  </select>
  <select id="querByPage1" resultMap="BaseResultMap">
  select u.id, u.name, u.createtime, u.phone, r.`rname` from t_user u join t_user_role ur on u.id = ur.uid
  join t_role r on r.id = ur.rid
  where u.name like #{msg} or u.phone like #{msg} order by u.id asc limit #{index},#{count}
  </select>
  <select id="queryCount" resultType="java.lang.Long">
    select count(*) from t_user
  </select>

  <select id="queryLike" resultMap="BaseResultMap">
  select u.id, u.name, u.createtime, u.phone, r.`rname` from t_user u join t_user_role ur on u.id = ur.uid
  join t_role r on r.id = ur.rid
 where u.name like #{msg} or title like #{msg} order by u.id desc
</select>

</mapper>